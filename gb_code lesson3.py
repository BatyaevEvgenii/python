# Постарайтесь использовать то, что мы прошли на уроке при решении этого ДЗ,
# вспомните про zip(), map(), lambda, посмотрите где лучше с ними, а где они излишни!

# Easy
# Задание - 1
# Создайте функцию, принимающую на вход Имя, возраст и город проживания человека
# Функция должна возвращать строку вида "Василий, 21 год(а), проживает в городе Москва"
# def personal(name, age, city):
#     print(name + ',', age, 'год(а),', 'проживает в городе', city)
#
# name, age, city = input('Введите имя, возраст, город: ').split(',')
# personal(name, age, city)


# Задание - 2
# Создайте функцию, принимающую на вход 3 числа, и возвращающую наибольшее из них
# def maxabc(a, b, c):
#     print(max(int(a), int(b), int(c)))
#
# a, b, c = input('Введите три числа: ').split(',')
# maxabc(a, b, c)

# Задание - 3
# Создайте функцию, принимающую неограниченное количество строковых аргументов,
# верните самую длинную строку из полученных аргументов
# def maxstring(*args):
#     list = []
#     count = int(input('Введите количество элементов: '))
#     for _ in range(count):
#         string = input('String: ')
#         list.append(string)
#     print(list)
#     print(max(list, key=len))
#
# maxstring()

# Normal
# Задание - 1
# Вам даны 2 списка одинаковой длины, в первом списке имена людей, во втором зарплаты,
# вам необходимо получить на выходе словарь, где ключ - имя, значение - зарплата.
# Запишите результаты в файл salary.txt так, чтобы на каждой строке было 2 столбца,
# столбцы разделяются пробелом, тире, пробелом. в первом имя, во втором зарплата, например: Vasya - 5000
# После чего прочитайте файл, выведите построчно имя и зарплату минус 13% (налоги ведь),
# Есть условие, не отображать людей получающих более зарплату 500000, как именно
#  выполнить условие решать вам, можете не писать в файл
# можете не выводить, подумайте какой способ будет наиболее правильным и оптимальным,
#  если скажем эти файлы потом придется передавать.
# Так же при выводе имя должно быть полностью в верхнем регистре!
# Подумайте вспоминая урок, как это можно сделать максимально кратко, используя возможности языка Python.
# name = ['x', 'y', 'z', 'boss']
# price = [100000, 200000, 300000, 500000]
# array = dict(zip(name, price))
# # for key, value in array.items():
# #     if value < int(500000):
# #         print(key, ' - ', value)
# file = open('salary.txt', 'w')
# for key, value in array.items():
#     if value < int(500000):
#         file.write('%s - %s\n' % (key, value))
# # print()
# file.close()
# with open('salary.txt', 'r') as file:
#     for line in file:
#         line_split = line.split(' - ')
#         # if int(line_split[1]) < int(500000):
#         print(line_split[0].upper(), ' - ', (int(line_split[1]) - int(float(line_split[1]) * float(0.13))))

#
# Hard
# Задание - 1
# Давайте опишем пару сущностей player и enemy через словарь,
# который будет иметь ключи и значения:
# name - строка полученная от пользователя,
# health - 100,
# damage - 50.
# Поэксперементируйте с значениями урона и жизней по желанию.
# Теперь надо создать функцию attack(person1, persoтn2), аргументы можете указать свои,
# функция в качестве аргумента будет принимать атакующего и атакуемого,
# функция должна получить параметр damage атакующего и отнять это количество
# health от атакуемого. Функция должна сама работать с словарями и изменять их значения.


# Задание - 2
# Давайте усложним предыдущее задание, измените сущности, добавив новый параметр - armor = 1.2
# Теперь надо добавить функцию, которая будет вычислять и возвращать полученный урон по формуле damage / armor
# Следовательно у вас должно быть 2 функции, одна наносит урон, вторая вычисляет урон по отношению к броне.

# Сохраните эти сущности, полностью, каждую в свой файл,
# в качестве названия для файла использовать name, расширение .txt
# Напишите функцию, которая будет считывать файл игрока и его врага, получать оттуда данные, и записывать их в словари,
# после чего происходит запуск игровой сессии, где сущностям поочередно наносится урон,
# пока у одного из них health не станет меньше или равен 0.
# После чего на экран должно быть выведено имя победителя, и количество оставшихся единиц здоровья.
